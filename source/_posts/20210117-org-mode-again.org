#+TITLE: org-mode又回来了

为什么会有这样一篇文章呢？

由于某些原因，我希望能借助到org-mode的执行能力。本来只是想写一个测试文档，后来一想来都来了，写篇正经点的文章也没什么不可以。所以就有了这样一篇文章。

* 这段日子org-mode去了哪里？

  矛盾，真的很矛盾。

  遇到很多的事情总是一致地相似，尝试过很多工具，最后结论就是，没有银弹。

  很久之前重度依赖org-mode，着迷于它简单的格式。

  使用它来应用gtd，记录时间，记录文章。因为org-mode很难跨平台提供手机端支持，一度为它提供了网页端来记录我使用手机打游戏的时间。

  最后是什么原因失败了呢？我发现有一些软件已经做到了这些，虽然收费，但是物有所值。

  那一段时间我换了软件，换了平台，emacs被我遗弃了。
  
* 这段日子我去了哪里？

  去了哪里当然是说我在做什么，文章里突然消失了。虽然只有我自己意识到自己是否消失。

  这段时间发生了一些事，行业也不是很景气，新冠也改变了自己的一些行为方式。换了个工作环境，新环境的融入耗费了一些精力。

  在感觉一切就要复苏的时候，我回来了。
  
* 为什么要重新使用org-mode？
  
** 诉求

   那为什么又要使用org-mode呢？

   这次不是因为gtd了，而是想要借一下org-mode的可执行手册的能力。

   为什么需要可执行手册呢？

   这要从几个月前说起了。。。此处陷入回忆，节奏放缓。。。

   我之前的工作以编码为主，换到新环境后做起了SRE，众所周知，SRE岗位做的事情有很大一部分是琐事。

   部门还处在建设之初，虽然各个事项已经手册化，但是频繁在手册与服务器间切换是很不容易的。可执行手册成为了我的救命稻草。
   
** 场景举例

   我举一个比较常用的场景，比如我要在运维机器上执行命令探测远端机器的一个接口服务，普通模式下要登录运维机，然后将手册里的命令粘贴到终端执行。

   比如，我可以定义远程执行函数如下：

   #+begin_src emacs-lisp
     (defvar foo-service-hosts '("127.0.0.1" "192.168.1.101"))
     (defun run-on-ops (cmd)
       "Run CMD on ops server."
       (format "I am the cmd (%s) result." cmd)
       )
   #+end_src

   #+RESULTS:
   : run-on-ops

   然后在相关操作手册里使用下面的结构：

   检测服务器请求是否正常：

   #+begin_src emacs-lisp
     (run-on-ops (format "curl %s/api/v1/hello" (first foo-service-hosts)))
   #+end_src

   #+RESULTS:
   : I am the cmd (curl 127.0.0.1/api/v1/hello) result.

   这样就可以把大部分操作留在文档里，避免一些接触服务器的操作。理想情况下，就可以完全不直接接触服务器了。

* 结论

  后面又会把org-mode使用起来了，不过是使用它的另一个能力。先练习使用起来再说。

  好了，我要去找导出为markdown的命令了，然后把这个文章更新到github。
